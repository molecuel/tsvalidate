{"version":3,"sources":["decorators.ts"],"names":[],"mappings":"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","file":"decorators.js","sourcesContent":["import { IValidatorOptions } from './interfaces/IValidatorOptions';\r\nimport validator = require('validator');\r\n\r\nexport class DecoratorTypes {\r\n\r\n  // all types\r\n  public static get IS_TYPED(): string { return 'ValidateType'; }\r\n  public static get IS_ARRAY(): string { return 'ValidateArray'; }\r\n  public static get IS_INT(): string { return 'IsInt'; }\r\n  public static get IS_FLOAT(): string { return 'IsFloat'; }\r\n  public static get IS_DECIMAL(): string { return 'IsDecimal'; }\r\n  public static get IS_EMPTY(): string { return 'IsEmpty'; }\r\n  public static get NOT_EMPTY(): string { return 'IsNotEmpty'; }\r\n  public static get DEFINED(): string { return 'IsDefined'; }\r\n  public static get EQUALS(): string { return 'Equals'; }\r\n  public static get IN_ARRAY(): string { return 'InArray'; }\r\n  public static get NOT_IN_ARRAY(): string { return 'NotInArray'; }\r\n  // public static get IS_NUMBER(): string { return 'IsNumber'; } // disabled\r\n  // public static get IS_STRING(): string { return 'IsString'; } // disabled\r\n  // public static get IS_BOOL(): string { return 'IsBoolean'; } // disabled\r\n\r\n  // string and number types\r\n  public static get MAX_LEN(): string { return 'MaxLen'; }\r\n  public static get MIN_LEN(): string { return 'MinLen'; }\r\n  public static get CONTAINS(): string { return 'Contains'; }\r\n\r\n  // string types\r\n  public static get MAX_BYTE_LEN(): string { return 'MaxByteLen'; }\r\n  public static get MIN_BYTE_LEN(): string { return 'MinByteLen'; }\r\n  public static get DATE_AFTER(): string { return 'DateAfter'; }\r\n  public static get DATE_BEFORE(): string { return 'DateBefore'; }\r\n  public static get UPPERCASE(): string { return 'Uppercase'; }\r\n  public static get LOWERCASE(): string { return 'Lowercase'; }\r\n  public static get DATE(): string { return 'IsDate'; }\r\n  public static get EMAIL(): string { return 'IsEmail'; }\r\n  public static get ALPHA(): string { return 'Alpha'; }\r\n  public static get ALPHA_NUM(): string { return 'AlphaNumeric'; }\r\n  public static get HEX_COLOR(): string { return 'HexColor'; }\r\n  public static get HEXADECIMAL(): string { return 'Hexadecimal'; }\r\n  public static get IP_ADDRESS(): string { return 'IsIP'; }\r\n  public static get DATE_ISO8601(): string { return 'ISO8601Date'; }\r\n  public static get MAC_ADDRESS(): string { return 'IsMAC'; }\r\n  public static get MONGO_ID(): string { return 'MongoID'; }\r\n  // public static get URL(): string { return 'IsURL'; } // disabled\r\n  // public static get MOBILE_PHONE_NUMBER(): string { return 'MobilePhoneNumber'; } // disabled\r\n\r\n  // number types\r\n  public static get MAX_VALUE(): string { return 'MaxValue'; }\r\n  public static get MIN_VALUE(): string { return 'MinValue'; }\r\n  public static get MULTIPLE_OF(): string { return 'MultipleOf'; }\r\n\r\n  // object types\r\n  public static get NESTED(): string { return 'ValidateNested'; }\r\n}\r\n\r\nexport function UseMongoCollection(collection: string) {\r\n  return function(target: Object) {\r\n    let input: any = target;\r\n    let className: string;\r\n    if ('prototype' in input) {\r\n      className = input.prototype.constructor.name;\r\n    }\r\n    else {\r\n      className = input.constructor.name;\r\n    }\r\n    let metadata = Reflect.getMetadata(METADATAKEY, target);\r\n    if (!metadata) {\r\n      metadata = [];\r\n    }\r\n    metadata.push({\r\n      type: 'UseMongoCollection',\r\n      property: className,\r\n      value: collection\r\n    });\r\n    Reflect.defineMetadata(METADATAKEY, metadata, target);\r\n  };\r\n}\r\n\r\nexport const METADATAKEY = 'tsvalidate:validators';\r\n\r\nexport function ValidateType(objectType?: Object|any[], validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.IS_TYPED, objectType, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function IsInt(validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.IS_INT, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function IsFloat(validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.IS_FLOAT, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function IsDecimal(validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.IS_DECIMAL, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function MaxLen(value: number, validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.MAX_LEN, value, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function MinLen(value: number, validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.MIN_LEN, value, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function MaxByteLen(value: number, validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.MAX_BYTE_LEN, value, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function MinByteLen(value: number, validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.MIN_BYTE_LEN, value, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function MaxValue(value: number, validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.MAX_VALUE, value, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function MinValue(value: number, validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.MIN_VALUE, value, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function DateBefore(value, validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.DATE_BEFORE, value, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function DateAfter(value, validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.DATE_AFTER, value, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function Equals(value, validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.EQUALS, value, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function Uppercase(validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.UPPERCASE, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function Lowercase(validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.LOWERCASE, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function MultipleOf(value: number, validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.MULTIPLE_OF, value, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function InArray(array: any[], validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.IN_ARRAY, array, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function NotInArray(array: any[], validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.NOT_IN_ARRAY, array, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function Contains(value: string | number, validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.CONTAINS, value, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function IsEmpty(validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.IS_EMPTY, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function IsNotEmpty(validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.NOT_EMPTY, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function Alpha(validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.ALPHA, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function AlphaNumeric(validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.ALPHA_NUM, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function IsDate(validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.DATE, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function IsEmail(validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.EMAIL, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function HexColor(validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.HEX_COLOR, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function IsIP(version?: number, validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.IP_ADDRESS, version, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function Hexadecimal(validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.HEXADECIMAL, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function ISO8601Date(validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.DATE_ISO8601, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function IsMAC(validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.MAC_ADDRESS, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function MongoID(validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.MONGO_ID, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function ValidateNested(validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.NESTED, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function IsDefined(validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.DEFINED, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function Trim() {\r\n  return function(target: Object, propertyName: string) {\r\n    for (let propertyName in target) {\r\n      // Check object for property.\r\n      if (!target.hasOwnProperty(propertyName)) {\r\n        continue;\r\n      }\r\n      validator.trim(target[propertyName]);\r\n    }\r\n  };\r\n}\r\n\r\nexport function ClearValidators() {\r\n  return function(target: Object, propertyName: string) {\r\n    let metadata = Reflect.getMetadata(METADATAKEY, target);\r\n    if (typeof metadata !== 'undefined') {\r\n      metadata = metadata.filter(function(entry) {\r\n        return entry.property !== propertyName;\r\n      });\r\n      Reflect.defineMetadata(METADATAKEY, metadata, target);\r\n    }\r\n  };\r\n}\r\n\r\nfunction BasicDecorator(target: Object, propertyName: string, type: string, value?: any, validatorOptions?: IValidatorOptions) {\r\n  let metadata = Reflect.getMetadata(METADATAKEY, target);\r\n  if (!metadata) {\r\n    metadata = [];\r\n  }\r\n  metadata = metadata.concat({\r\n    type: type,\r\n    property: propertyName,\r\n    value: value,\r\n    options: validatorOptions\r\n  });\r\n  Reflect.defineMetadata(METADATAKEY, metadata, target);\r\n};\r\n"]}