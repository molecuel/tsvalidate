{"version":3,"sources":["decorators.ts"],"names":[],"mappings":"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","file":"decorators.js","sourcesContent":["import { IValidatorOptions } from './interfaces/IValidatorOptions';\r\nimport validator = require('validator');\r\n\r\nexport class DecoratorTypes {\r\n\r\n  // all types\r\n  static IS_TYPED = 'ValidateType';\r\n  static IS_INT = 'IsInt';\r\n  static IS_FLOAT = 'IsFloat';\r\n  static IS_DECIMAL = 'IsDecimal';\r\n  static IS_EMPTY = 'IsEmpty';\r\n  static NOT_EMPTY = 'IsNotEmpty';\r\n  static DEFINED = 'IsDefined';\r\n  static EQUALS = 'Equals';\r\n  static IN_ARRAY = 'InArray';\r\n  // static IS_NUMBER = 'IsNumber'; // disabled\r\n  // static IS_STRING = 'IsString'; // disabled\r\n  // static IS_BOOL = 'IsBoolean'; // disabled\r\n\r\n  // string and number types\r\n  static MAX_LEN = 'MaxLen';\r\n  static MIN_LEN = 'MinLen';\r\n  static CONTAINS = 'Contains';\r\n\r\n  // string types\r\n  static MAX_BYTE_LEN = 'MaxByteLen';\r\n  static MIN_BYTE_LEN = 'MinByteLen';\r\n  static DATE_AFTER = 'DateAfter';\r\n  static DATE_BEFORE = 'DateBefore';\r\n  static UPPERCASE = 'Uppercase';\r\n  static LOWERCASE = 'Lowercase';\r\n  static DATE = 'IsDate';\r\n  static EMAIL = 'IsEmail';\r\n  static ALPHA = 'Alpha';\r\n  static ALPHA_NUM = 'AlphaNumeric';\r\n  static HEX_COLOR = 'HexColor';\r\n  static HEXADECIMAL = 'Hexadecimal';\r\n  static IP_ADDRESS = 'IsIP';\r\n  static DATE_ISO8601 = 'ISO8601Date';\r\n  static MAC_ADDRESS = 'IsMAC';\r\n  static MONGO_ID = 'MongoID';\r\n  static URL = 'IsURL';\r\n  static MOBILE_PHONE_NUMBER = 'MobilePhoneNumber';\r\n\r\n  // number types\r\n  static MAX_VALUE = 'MaxValue';\r\n  static MIN_VALUE = 'MinValue';\r\n  static MULTIPLE_OF = 'MultipleOf';\r\n\r\n  // object types\r\n  static NESTED = 'ValidateNested';\r\n}\r\n\r\nexport function ValidateType(objectType?: Object, validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.IS_TYPED, objectType, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function IsInt(validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.IS_INT, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function IsFloat(validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.IS_FLOAT, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function IsDecimal(validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.IS_DECIMAL, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function MaxLen(value: number, validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.MAX_LEN, value, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function MinLen(value: number, validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.MIN_LEN, value, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function MaxByteLen(value: number, validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.MAX_BYTE_LEN, value, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function MinByteLen(value: number, validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.MIN_BYTE_LEN, value, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function MaxValue(value: number, validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.MAX_VALUE, value, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function MinValue(value: number, validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.MIN_VALUE, value, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function DateBefore(value, validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.DATE_BEFORE, value, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function DateAfter(value, validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.DATE_AFTER, value, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function Equals(value, validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.EQUALS, value, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function Uppercase(validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.UPPERCASE, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function Lowercase(validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.LOWERCASE, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function MultipleOf(value: number, validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.MULTIPLE_OF, value, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function InArray(array: any[], validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.IN_ARRAY, array, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function Contains(value: string | number, validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.CONTAINS, value, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function IsEmpty(validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.IS_EMPTY, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function IsNotEmpty(validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.NOT_EMPTY, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function Alpha(validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.ALPHA, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function AlphaNumeric(validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.ALPHA_NUM, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function IsDefined(validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.DEFINED, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function MobilePhoneNumber(language: string, validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.MOBILE_PHONE_NUMBER, language, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function IsDate(validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.DATE, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function IsEmail(validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.EMAIL, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function HexColor(validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.HEX_COLOR, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function IsIP(version?: number, validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.IP_ADDRESS, version, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function Hexadecimal(validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.HEXADECIMAL, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function ISO8601Date(validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.DATE_ISO8601, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function IsMAC(validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.MAC_ADDRESS, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function MongoID(validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.MONGO_ID, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function IsURL(validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.URL, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function ValidateNested(validatorOptions?: IValidatorOptions) {\r\n  return function(target: Object, propertyName: string) {\r\n    BasicDecorator(target, propertyName, DecoratorTypes.NESTED, validatorOptions);\r\n  };\r\n}\r\n\r\nexport function Trim() {\r\n  return function(target: Object, propertyName: string) {\r\n    for (let propertyName in target) {\r\n      // Check object for property.\r\n      if (!target.hasOwnProperty(propertyName)) {\r\n        continue;\r\n      }\r\n      validator.trim(target[propertyName]);\r\n    }\r\n  };\r\n}\r\n\r\nfunction BasicDecorator(_target: Object, _propertyName: string, _type: string, _value: any, validatorOptions?: IValidatorOptions) {\r\n  let metadata = Reflect.getMetadata('tsvalidate:validators', _target, _propertyName);\r\n  if (!metadata) {\r\n    metadata = [];\r\n  }\r\n  metadata.push({ type: _type, value: _value, validatorOptions });\r\n  Reflect.defineMetadata('tsvalidate:validators', metadata, _target, _propertyName);\r\n};\r\n"],"sourceRoot":"/source/"}