{"version":3,"sources":["index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["'use strict';\nimport 'reflect-metadata';\nimport { IValidatorOptions } from './interfaces/IValidatorOptions';\nimport { IValidatorError } from './interfaces/IValidatorError';\nimport * as decorators from './decorators';\nimport validator = require('validator');\n\nexport class Validator {\n\n  private errors: string[] = [];\n  private nestedMode: boolean = false;\n\n  public validate(target: Object, validatorOptions?: IValidatorOptions) {\n\n    for (let propertyName in target) {\n      // Check object for property.\n      if (!target.hasOwnProperty(propertyName)) {\n        continue;\n      }\n      // Get system- and validator-predefined Metadata, then check for sufficient results.\n      let types = Reflect.getMetadata('design:type', target, propertyName);\n      let metadata = Reflect.getMetadata('tsvalidate:validators', target, propertyName);\n      if (metadata !== undefined\n        && types !== undefined) {\n        // Loop over sets of Metadata, execute requested type dependant validation.\n        for (let metadataEntry of metadata) {\n          if (metadataEntry.type === decorators.DecoratorTypes.NESTED\n            && typeof target[propertyName] === 'object') {\n            this.nestedMode = true;\n            this.validate(target[propertyName], validatorOptions);\n          }\n          else {\n            this.nestedMode = false;\n            switch (types.name) {\n              case 'String':\n                this.validateString(target, propertyName, metadataEntry);\n                break;\n              case 'Number':\n                this.validateNumber(target, propertyName, metadataEntry);\n                break;\n              case 'Boolean':\n                break;\n            }\n            // Execute requested type independant validation.\n            switch (metadataEntry.type) {\n              case decorators.DecoratorTypes.IS_STRING:\n                if (types.name !== 'String') {\n                  this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' is no string.');\n                }\n                break;\n              case decorators.DecoratorTypes.IS_BOOL:\n                if (types.name !== 'Boolean') {\n                  this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' is not of type Boolean.');\n                }\n                break;\n              case decorators.DecoratorTypes.IS_NUMBER:\n                if (types.name !== 'Number') {\n                  this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' is no number.');\n                }\n                break;\n              case decorators.DecoratorTypes.IS_INT:\n                if (!validator.isInt(target[propertyName].toString())) {\n                  this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' is not of type Integer.');\n                }\n                break;\n              case decorators.DecoratorTypes.IS_FLOAT:\n                if (!validator.isFloat(target[propertyName].toString())) {\n                  this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' is not of type Float.');\n                }\n                break;\n              case decorators.DecoratorTypes.IS_DECIMAL:\n                if (!validator.isDecimal(target[propertyName].toString())) {\n                  this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' is not of type Decimal.');\n                }\n                break;\n              case decorators.DecoratorTypes.NOT_EMPTY:\n                if (target[propertyName] === ''\n                  || target[propertyName] === null\n                  || target[propertyName] === undefined) {\n                  this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' is empty.');\n                }\n                break;\n              case decorators.DecoratorTypes.IS_EMPTY:\n                if (target[propertyName] !== ''\n                  && target[propertyName] !== null\n                  && target[propertyName] !== undefined) {\n                  this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' is not empty.');\n                }\n                break;\n              case decorators.DecoratorTypes.DEFINED:\n                if (target[propertyName] === null\n                  || target[propertyName] === undefined) {\n                  this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' is not defined.');\n                }\n                break;\n              case decorators.DecoratorTypes.IN_ARRAY:\n                if (!validator.isIn(target[propertyName].toString(), metadataEntry.value)) {\n                  this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' not found in relevant array.');\n                }\n                break;\n              case decorators.DecoratorTypes.EQUALS:\n                if (!validator.isIn(target[propertyName].toString(), metadataEntry.value.toString())) {\n                  this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' not equal to \\\"' + metadataEntry.value.toString() + '\\\".');\n                }\n                break;\n            }\n          }\n        }\n      }\n      else {\n        continue;\n      }\n    }\n    if (this.errors.length > 0\n      && !this.nestedMode) {\n      return this.errors;\n    } else {\n      return;\n    }\n  }\n\n  private validateString(target: Object, propertyName: string, metadataEntry: any) {\n    switch (metadataEntry.type) {\n      case decorators.DecoratorTypes.MAX_LEN:\n        if (!validator.isLength(target[propertyName], { max: metadataEntry.value })) {\n          this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' is longer than ' + metadataEntry.value + ' digit(s).');\n        }\n        break;\n      case decorators.DecoratorTypes.MIN_LEN:\n        if (!validator.isLength(target[propertyName], { min: metadataEntry.value })) {\n          this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' is shorter than ' + metadataEntry.value + ' digit(s).');\n        }\n        break;\n      case decorators.DecoratorTypes.MAX_BYTE_LEN:\n        if (!validator.isByteLength(target[propertyName], { max: metadataEntry.value })) {\n          this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' is longer than ' + metadataEntry.value + ' byte(s).');\n        }\n        break;\n      case decorators.DecoratorTypes.MIN_BYTE_LEN:\n        if (!validator.isByteLength(target[propertyName], { min: metadataEntry.value })) {\n          this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' is shorter than ' + metadataEntry.value + ' byte(s).');\n        }\n        break;\n      case decorators.DecoratorTypes.CONTAINS:\n        if (!validator.contains(target[propertyName], metadataEntry.value)) {\n          this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' does not contain \\\"' + metadataEntry.value + '\\\".');\n        }\n        break;\n      case decorators.DecoratorTypes.MATCHING:\n        if (!validator.matches(target[propertyName], metadataEntry.value)) {\n          this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' does not match \\\"' + metadataEntry.value + '\\\".');\n        }\n        break;\n      case decorators.DecoratorTypes.ALPHA:\n        if (!validator.isAlpha(target[propertyName])) {\n          this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' is not exclusively composed of letter characters.');\n        }\n        break;\n      case decorators.DecoratorTypes.ALPHA_NUM:\n        if (!validator.isAlphanumeric(target[propertyName])) {\n          this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' is not alphanumeric.');\n        }\n        break;\n      case decorators.DecoratorTypes.DATE:\n        if (!validator.isDate(target[propertyName])) {\n          this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' is not a date.');\n        }\n        break;\n      case decorators.DecoratorTypes.DATE_ISO8601:\n        if (!validator.isISO8601(target[propertyName])) {\n          this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' is not a ISO8601 conform date.');\n        }\n        break;\n      case decorators.DecoratorTypes.DATE_AFTER:\n        if (!validator.isAfter(target[propertyName]), metadataEntry.value) {\n          this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' is not a date after ' + validator.toDate(metadataEntry.value) + '.');\n        }\n        break;\n      case decorators.DecoratorTypes.DATE_BEFORE:\n        if (!validator.isBefore(target[propertyName]), metadataEntry.value) {\n          this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' is not a date before ' + validator.toDate(metadataEntry.value) + '.');\n        }\n        break;\n      case decorators.DecoratorTypes.UPPERCASE:\n        if (!validator.isUppercase(target[propertyName])) {\n          this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' is not uppercase.');\n        }\n        break;\n      case decorators.DecoratorTypes.LOWERCASE:\n        if (!validator.isLowercase(target[propertyName])) {\n          this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' is not lowercase.');\n        }\n        break;\n      case decorators.DecoratorTypes.MOBILE_PHONE_NUMBER:\n        if (!validator.isMobilePhone(target[propertyName], metadataEntry.value)) {\n          this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' is no mobile phone number.');\n        }\n        break;\n      case decorators.DecoratorTypes.HEXADECIMAL:\n        if (!validator.isHexadecimal(target[propertyName])) {\n          this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' is no hexadecimal number.');\n        }\n        break;\n      case decorators.DecoratorTypes.EMAIL:\n        if (!validator.isEmail(target[propertyName])) {\n          this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' is no valid email address.');\n        }\n        break;\n      case decorators.DecoratorTypes.HEX_COLOR:\n        if (!validator.isHexColor(target[propertyName])) {\n          this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' is no hexadecimal color.');\n        }\n        break;\n      case decorators.DecoratorTypes.MAC_ADDRESS:\n        if (!validator.isMACAddress(target[propertyName])) {\n          this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' is no MAC address.');\n        }\n        break;\n      case decorators.DecoratorTypes.MONGO_ID:\n        if (!validator.isMongoId(target[propertyName])) {\n          this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' is no MongoDB ObjectID.');\n        }\n        break;\n      case decorators.DecoratorTypes.URL:\n        if (!validator.isURL(target[propertyName])) {\n          this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' is no URL.');\n        }\n        break;\n      case decorators.DecoratorTypes.IP_ADDRESS:\n        if (metadataEntry.value === null\n          || metadataEntry.value === undefined) {\n          if (!validator.isIP(target[propertyName], 4)\n            && !validator.isIP(target[propertyName], 6)) {\n            this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' is no valid IP address.');\n          }\n        }\n        else if (metadataEntry.value !== 4\n          || metadataEntry.value !== 6) {\n          this.errors.push('Could not validate parameter ' + propertyName + ' of ' + target.constructor.name + '. ' + metadataEntry.value + ' is no valid Internet Protocol version.');\n        }\n        else {\n          if (!validator.isIP(target[propertyName], metadataEntry.value)) {\n            this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' is no valid IP' + metadataEntry.value + ' address.');\n          }\n        }\n        break;\n    }\n  }\n\n  private validateNumber(target: Object, propertyName: string, metadataEntry: any) {\n    switch (metadataEntry.type) {\n      case decorators.DecoratorTypes.MAX_LEN:\n        if (!validator.isLength(target[propertyName].toString(), { max: metadataEntry.value })) {\n          this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' is longer than ' + metadataEntry.value + ' digit(s).');\n        }\n        break;\n      case decorators.DecoratorTypes.MIN_LEN:\n        if (!validator.isLength(target[propertyName].toString(), { min: metadataEntry.value })) {\n          this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' is shorter than ' + metadataEntry.value + ' digit(s).');\n        }\n        break;\n      case decorators.DecoratorTypes.MAX_VALUE:\n        if (!validator.isLength(target[propertyName].toString(), { max: metadataEntry.value })) {\n          this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' is bigger than ' + metadataEntry.value + '.');\n        }\n        break;\n      case decorators.DecoratorTypes.MIN_VALUE:\n        if (!validator.isLength(target[propertyName].toString(), { min: metadataEntry.value })) {\n          this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' is smaller than ' + metadataEntry.value + '.');\n        }\n        break;\n      case decorators.DecoratorTypes.CONTAINS:\n        if (!validator.contains(target[propertyName].toString(), metadataEntry.value.toString())) {\n          this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' does not contain \\\"' + metadataEntry.value + '\\\".');\n        }\n        break;\n      case decorators.DecoratorTypes.MOBILE_PHONE_NUMBER:\n        if (!validator.isMobilePhone(target[propertyName].toString(), metadataEntry.value)) {\n          this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' is no mobile phone number.');\n        }\n        break;\n      case decorators.DecoratorTypes.MULTIPLE_OF:\n        if (!validator.isDivisibleBy(target[propertyName].toString(), metadataEntry.value)) {\n          this.errors.push('Parameter ' + propertyName + ' of ' + target.constructor.name + ' is no multiple of ' + metadataEntry.value + '.');\n        }\n        break;\n    }\n  }\n}\n"],"sourceRoot":"/source/"}