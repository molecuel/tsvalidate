{"version":3,"sources":["classes/validators/MaxLen.ts"],"names":[],"mappings":";AACA,MAAO,SAAS,WAAW,WAAW,CAAC,CAAC;AAExC;IAEE;QACE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;IACvB,CAAC;IACM,SAAS,CAAC,KAAa,EAAE,gBAAsB;QACpD,MAAM,CAAC,UAAS,MAAc,EAAE,YAAoB;YAClD,IAAI,UAAU,GAAG,OAAO,CAAC,WAAW,CAAC,uBAAuB,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC;YACpF,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;gBAChB,UAAU,GAAG,EAAE,CAAC;YAClB,CAAC;YACD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,UAAU,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,kBAAA,gBAAgB,EAAE,CAAC,CAAC;YACpE,OAAO,CAAC,cAAc,CAAC,uBAAuB,EAAE,UAAU,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC;QACpF,CAAC,CAAC;IACJ,CAAC;IACM,QAAQ,CAAC,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,OAAO;QAClD,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;YACzD,MAAM,CAAC,IAAI,KAAK,CAAC,gBAAgB,GAAG,YAAY,CAAC,CAAC;QACpD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC;QACT,CAAC;IACH,CAAC;AACH,CAAC;AAvBY,cAAM,SAuBlB,CAAA","file":"classes/validators/MaxLen.js","sourcesContent":["import {IValidator} from '../../interfaces/IValidator';\nimport validator = require('validator');\n\nexport class MaxLen implements IValidator {\n  public name: string;\n  constructor() {\n    this.name = 'MaxLen';\n  }\n  public decorator(value: number, validatorOptions?: any) {\n    return function(target: Object, propertyName: string) {\n      let validators = Reflect.getMetadata('tsvalidate:validators', target, propertyName);\n      if (!validators) {\n        validators = [];\n      }\n      console.log(value);\n      validators.push({ type: 'MaxLen', value: value, validatorOptions });\n      Reflect.defineMetadata('tsvalidate:validators', validators, target, propertyName);\n    };\n  }\n  public validate(value, target, propertyName, options) {\n    if (!validator.isLength(value, { min: 0, max: options })) {\n      return new Error('Not valid for ' + propertyName);\n    } else {\n      return;\n    }\n  }\n}\n"],"sourceRoot":"/source/"}